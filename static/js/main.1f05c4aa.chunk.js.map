{"version":3,"sources":["images/pokeball.png","components/dropDown.jsx","components/pokemon.jsx","components/pokemonList.jsx","components/app.jsx","index.js"],"names":["module","exports","DropDown","props","label","onChange","handleChange","children","Pokemon","useState","dataURL","setDataURL","data","setData","loading","setLoading","statsVisable","setStatsVisable","pokeColours","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","useEffect","axios","get","url","then","response","id","statsToggler","stats","speed","specialDefense","specialAttack","defense","attack","hp","className","onClick","src","pokeball","name","base_stat","sprites","front_default","types","map","typeStat","style","backgroundColor","type","listStyle","height","weight","PokemonList","pokemonData","pokemon","i","key","App","pokemonList","setPokemonList","results","event","target","value","pokemon_species","pokeData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f05c4aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.d682db92.png\";","import React from \"react\";\r\n// is this how you make a reusable component..\r\nfunction DropDown(props) {\r\n  return (\r\n    <div>\r\n      <label>{props.label}</label>\r\n\r\n      <select onChange = {props.handleChange}  >\r\n       {props.children}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropDown;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport pokeball from \"../images/pokeball.png\"\r\n\r\n\r\nfunction Pokemon(props) {\r\n  const [dataURL, setDataURL] = useState();\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [statsVisable, setStatsVisable] = useState(false);\r\n\r\n  const pokeColours = {\r\n    bug: \"A8B820\",\r\n    dark: \"705848\",\r\n    dragon: \"7038F8\",\r\n    electric: \"F8D030\",\r\n    fairy: \"EE99AC\",\r\n    fighting: \"C03028\",\r\n    fire: \"F08030\",\r\n    flying: \"A890F0\",\r\n    ghost: \"705898\",\r\n    grass: \"78C850\",\r\n    ground: \"E0C068\",\r\n    ice: \"98D8D8\",\r\n    normal: \"A8A878\",\r\n    poison: \"A040A0\",\r\n    psychic: \"F85888\",\r\n    rock: \"B8A038\",\r\n    steel: \"B8B8D0\",\r\n    water: \"6890F0\"\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(props.url).then(response => {\r\n      setDataURL(\"https://pokeapi.co/api/v2/pokemon/\" + response.data.id);\r\n    });\r\n  }, [props.url]);\r\n\r\n  const statsToggler = () => {\r\n    axios.get(dataURL).then(response => {\r\n      setData(response.data);\r\n\r\n      setLoading(false);\r\n    });\r\n\r\n    if (statsVisable) {\r\n      setStatsVisable(false);\r\n    } else {\r\n      setStatsVisable(true);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  if (!loading) {\r\n    //is this stupid? i thought it would be better having nice variable names for each stat rather than saying data.stats[0].base_stat etc in the jsx below.\r\n   \r\n    var [speed, specialDefense, specialAttack, defense, attack, hp] = data.stats;\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"col-xs-12 col-md-6 col-lg-4 col-xl-3\">\r\n      <div className=\"card p-3 m-3\">\r\n        {!statsVisable && (\r\n          <div className=\"card-body\">\r\n            <img\r\n              onClick={statsToggler}\r\n              className=\"card-img-top text-center\"\r\n              src={pokeball}\r\n            ></img>\r\n            <h3 className=\"card-text text-center\">{props.name}</h3>\r\n           \r\n          </div>\r\n        )}\r\n\r\n        {statsVisable && (\r\n          <div className=\"\">\r\n            <h2 className=\"card-text\">{props.name}</h2>\r\n            <h3>HP: {!loading && hp.base_stat}</h3>\r\n            <hr />\r\n            <button onClick={statsToggler}>hide stats</button>\r\n            {loading ? (\r\n              <i className=\"fas fa-spinner fa-spin\"></i>\r\n            ) : (\r\n              <div className=\"text-center\">\r\n                <img className=\"w-100\" src={data.sprites.front_default}></img>\r\n           \r\n                {data.types.map(typeStat => {\r\n                  return (\r\n\r\n                    \r\n                    <span\r\n                      className=\"badge m-1\"\r\n                      style={{\r\n                        backgroundColor: \"#\" + pokeColours[typeStat.type.name]\r\n                      }}\r\n                    >\r\n                      {typeStat.type.name}\r\n                    </span>\r\n                  ); //make an object with the colours and use the typestat to acsess the colours..\r\n                })}\r\n                <hr />\r\n                <ul style={{listStyle:\"none\"}}>\r\n                  <li>Height: {data.height}</li>\r\n                  <li>Weight: {data.weight}</li>\r\n\r\n                  <li>Attack: {attack.base_stat}</li>\r\n                  <li>Defense: {defense.base_stat}</li>\r\n                  <li>Special attack: {specialAttack.base_stat}</li>\r\n                  <li>Special Defense: {specialDefense.base_stat}</li>\r\n                  <li>Speed: {speed.base_stat}</li>\r\n                 \r\n                </ul>\r\n              \r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pokemon;","import React from \"react\";\r\nimport Pokemon from \"./pokemon\";\r\n\r\nfunction PokemonList(props) {\r\n  /**props.pokemonData = array of objects [{name:\"pokemon\", url:\"endpoint to get specific pokemon data\"}...] */\r\n\r\n  return (\r\n    <>\r\n      {props.pokemonData.map((pokemon, i) => {\r\n       \r\n        return <Pokemon name={pokemon.name} url={pokemon.url} key={i} />;\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PokemonList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport DropDown from \"./dropDown\";\r\nimport PokemonList from \"./pokemonList\";\r\n\r\nfunction App() {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //runs when component initailly mounts, similar to componentDidMount().\r\n    //sets deefault list of pokemon to the original gen 1s\r\n    axios.get(\"https://pokeapi.co/api/v2/pokemon\").then(response => {\r\n      setPokemonList(response.data.results);\r\n    });\r\n  }, []);\r\n\r\n  // set pokeList to [{name:pokemons name, url:endpoing to get pokemons stats etc..}] ----> the pokelist component only works if i send it data like this.\r\n  // functions below needed because in order the generation\r\n\r\n  function generationFilter(event) {\r\n    axios\r\n      .get(\"https://pokeapi.co/api/v2/generation/\" + event.target.value)\r\n      .then(response => {\r\n        setPokemonList(response.data.pokemon_species);\r\n      });\r\n  }\r\n\r\n  function typeFilter(event) {\r\n    axios\r\n      .get(\"https://pokeapi.co/api/v2/type/\" + event.target.value)\r\n      .then(response => {\r\n        let pokeData = response.data.pokemon.map(pokemon => {\r\n          // this crap is needed because i wanted a list like\r\n          //[{name:pokemons name, url:endpoing to get pokemons stats etc..}] but the response.data.pokemon was nested differnetly to the generation\r\n          return pokemon.pokemon;\r\n        });\r\n        setPokemonList(pokeData);\r\n      });\r\n  }\r\n\r\n  return (\r\n    //i think how im putting value in each of those options is wrong. somthing about single source of rtruth. \r\n    //if i put the value as state it doesnt work.. im sure its wrong but it works \r\n    <div>\r\n      <DropDown\r\n        label=\"Filter Pokemon by Generation\"\r\n        handleChange={generationFilter}\r\n      >\r\n        <option value=\"1\">Generation I </option>\r\n        <option value=\"2\">Generation II </option>\r\n        <option value=\"3\">Generation III </option>\r\n        <option value=\"4\">Generation IV </option>\r\n        <option value=\"5\">Generation V</option>\r\n        <option value=\"6\">Generation VI</option>\r\n        <option value=\"7\"> Generation VII</option>\r\n      </DropDown>\r\n\r\n      <DropDown label=\"Filter Pokemon by Type\" handleChange={typeFilter}>\r\n        <option value=\"normal\">Normal</option>\r\n        <option value=\"fighting\">Fighting </option>\r\n        <option value=\"flying\">Flying </option>\r\n        <option value=\"poison\">poison </option>\r\n        <option value=\"ground\">Ground</option>\r\n        <option value=\"rock\">Rock</option>\r\n        <option value=\"bug\">Bug</option>\r\n        <option value=\"ghost\">Ghost</option>\r\n        <option value=\"steel\">Steel </option>\r\n        <option value=\"fire\">Fire </option>\r\n        <option value=\"water\">Water </option>\r\n        <option value=\"grass\">Grass</option>\r\n        <option value=\"electric\">Electric</option>\r\n        <option value=\"psychic\"> Psychic</option>\r\n        <option value=\"ice\">Ice </option>\r\n        <option value=\"dragon\">Dragon </option>\r\n        <option value=\"dark\">Dark </option>\r\n        <option value=\"fairy\">Fairy</option>\r\n        <option value=\"shadow\">Shadow</option>\r\n        <option value=\"unknown\"> Unknown</option>\r\n        \r\n      </DropDown>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <PokemonList pokemonData={pokemonList} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById(\"root\")\r\n)"],"sourceRoot":""}